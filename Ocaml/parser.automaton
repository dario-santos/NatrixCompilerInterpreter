State 0:
prog' -> . prog [ # ]
-- On VAL shift to state 1
-- On RETURN shift to state 32
-- On PRINT shift to state 35
-- On IF shift to state 40
-- On IDENT shift to state 45
-- On stmts shift to state 56
-- On stmt shift to state 59
-- On prog shift to state 60

State 1:
stmt -> VAL . IDENT COLON INT ASSIGN expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On IDENT shift to state 2

State 2:
stmt -> VAL IDENT . COLON INT ASSIGN expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On COLON shift to state 3

State 3:
stmt -> VAL IDENT COLON . INT ASSIGN expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On INT shift to state 4

State 4:
stmt -> VAL IDENT COLON INT . ASSIGN expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On ASSIGN shift to state 5

State 5:
stmt -> VAL IDENT COLON INT ASSIGN . expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 30

State 6:
expr -> NOT . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 29

State 7:
expr -> LPR . expr RPR [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 10

State 8:
expr -> IDENT . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES reduce production expr -> IDENT 
-- On RPR reduce production expr -> IDENT 
-- On RBK reduce production expr -> IDENT 
-- On PLUS reduce production expr -> IDENT 
-- On OR reduce production expr -> IDENT 
-- On MINUS reduce production expr -> IDENT 
-- On LBK reduce production expr -> IDENT 
-- On DIV reduce production expr -> IDENT 
-- On DELIMITER reduce production expr -> IDENT 
-- On CMP reduce production expr -> IDENT 
-- On AND reduce production expr -> IDENT 

State 9:
expr -> CST . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES reduce production expr -> CST 
-- On RPR reduce production expr -> CST 
-- On RBK reduce production expr -> CST 
-- On PLUS reduce production expr -> CST 
-- On OR reduce production expr -> CST 
-- On MINUS reduce production expr -> CST 
-- On LBK reduce production expr -> CST 
-- On DIV reduce production expr -> CST 
-- On DELIMITER reduce production expr -> CST 
-- On CMP reduce production expr -> CST 
-- On AND reduce production expr -> CST 

State 10:
expr -> expr . LBK expr RBK [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . DIV expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . CMP expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . AND expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . OR expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> LPR expr . RPR [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES shift to state 11
-- On RPR shift to state 28
-- On PLUS shift to state 16
-- On OR shift to state 20
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On CMP shift to state 24
-- On AND shift to state 26

State 11:
expr -> expr TIMES . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 12

State 12:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr TIMES expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On LBK shift to state 13
-- On TIMES reduce production expr -> expr TIMES expr 
-- On RPR reduce production expr -> expr TIMES expr 
-- On RBK reduce production expr -> expr TIMES expr 
-- On PLUS reduce production expr -> expr TIMES expr 
-- On OR reduce production expr -> expr TIMES expr 
-- On MINUS reduce production expr -> expr TIMES expr 
-- On DIV reduce production expr -> expr TIMES expr 
-- On DELIMITER reduce production expr -> expr TIMES expr 
-- On CMP reduce production expr -> expr TIMES expr 
-- On AND reduce production expr -> expr TIMES expr 

State 13:
expr -> expr LBK . expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 14

State 14:
expr -> expr . LBK expr RBK [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr LBK expr . RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . MINUS expr [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . TIMES expr [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . DIV expr [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . CMP expr [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . AND expr [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . OR expr [ TIMES RBK PLUS OR MINUS LBK DIV CMP AND ]
-- On TIMES shift to state 11
-- On RBK shift to state 15
-- On PLUS shift to state 16
-- On OR shift to state 20
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On CMP shift to state 24
-- On AND shift to state 26

State 15:
expr -> expr LBK expr RBK . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES reduce production expr -> expr LBK expr RBK 
-- On RPR reduce production expr -> expr LBK expr RBK 
-- On RBK reduce production expr -> expr LBK expr RBK 
-- On PLUS reduce production expr -> expr LBK expr RBK 
-- On OR reduce production expr -> expr LBK expr RBK 
-- On MINUS reduce production expr -> expr LBK expr RBK 
-- On LBK reduce production expr -> expr LBK expr RBK 
-- On DIV reduce production expr -> expr LBK expr RBK 
-- On DELIMITER reduce production expr -> expr LBK expr RBK 
-- On CMP reduce production expr -> expr LBK expr RBK 
-- On AND reduce production expr -> expr LBK expr RBK 

State 16:
expr -> expr PLUS . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 17

State 17:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr PLUS expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES shift to state 11
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On RPR reduce production expr -> expr PLUS expr 
-- On RBK reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On DELIMITER reduce production expr -> expr PLUS expr 
-- On CMP reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 18:
expr -> expr DIV . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 19

State 19:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr DIV expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On LBK shift to state 13
-- On TIMES reduce production expr -> expr DIV expr 
-- On RPR reduce production expr -> expr DIV expr 
-- On RBK reduce production expr -> expr DIV expr 
-- On PLUS reduce production expr -> expr DIV expr 
-- On OR reduce production expr -> expr DIV expr 
-- On MINUS reduce production expr -> expr DIV expr 
-- On DIV reduce production expr -> expr DIV expr 
-- On DELIMITER reduce production expr -> expr DIV expr 
-- On CMP reduce production expr -> expr DIV expr 
-- On AND reduce production expr -> expr DIV expr 

State 20:
expr -> expr OR . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 21

State 21:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr OR expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 16
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On CMP shift to state 24
-- On AND shift to state 26
-- On RPR reduce production expr -> expr OR expr 
-- On RBK reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On DELIMITER reduce production expr -> expr OR expr 

State 22:
expr -> expr MINUS . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 23

State 23:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr MINUS expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES shift to state 11
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On RPR reduce production expr -> expr MINUS expr 
-- On RBK reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On DELIMITER reduce production expr -> expr MINUS expr 
-- On CMP reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 24:
expr -> expr CMP . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 25

State 25:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr CMP expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 16
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On RPR reduce production expr -> expr CMP expr 
-- On RBK reduce production expr -> expr CMP expr 
-- On OR reduce production expr -> expr CMP expr 
-- On DELIMITER reduce production expr -> expr CMP expr 
-- On AND reduce production expr -> expr CMP expr 

State 26:
expr -> expr AND . expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 27

State 27:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr AND expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 16
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On CMP shift to state 24
-- On RPR reduce production expr -> expr AND expr 
-- On RBK reduce production expr -> expr AND expr 
-- On OR reduce production expr -> expr AND expr 
-- On DELIMITER reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 

State 28:
expr -> LPR expr RPR . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES reduce production expr -> LPR expr RPR 
-- On RPR reduce production expr -> LPR expr RPR 
-- On RBK reduce production expr -> LPR expr RPR 
-- On PLUS reduce production expr -> LPR expr RPR 
-- On OR reduce production expr -> LPR expr RPR 
-- On MINUS reduce production expr -> LPR expr RPR 
-- On LBK reduce production expr -> LPR expr RPR 
-- On DIV reduce production expr -> LPR expr RPR 
-- On DELIMITER reduce production expr -> LPR expr RPR 
-- On CMP reduce production expr -> LPR expr RPR 
-- On AND reduce production expr -> LPR expr RPR 

State 29:
expr -> expr . LBK expr RBK [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> NOT expr . [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES RPR RBK PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
-- On TIMES shift to state 11
-- On PLUS shift to state 16
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On CMP shift to state 24
-- On RPR reduce production expr -> NOT expr 
-- On RBK reduce production expr -> NOT expr 
-- On OR reduce production expr -> NOT expr 
-- On DELIMITER reduce production expr -> NOT expr 
-- On AND reduce production expr -> NOT expr 

State 30:
expr -> expr . LBK expr RBK [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
stmt -> VAL IDENT COLON INT ASSIGN expr . DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On TIMES shift to state 11
-- On PLUS shift to state 16
-- On OR shift to state 20
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On DELIMITER shift to state 31
-- On CMP shift to state 24
-- On AND shift to state 26

State 31:
stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER . [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On VAL reduce production stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER 
-- On RETURN reduce production stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER 
-- On RBC reduce production stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER 
-- On PRINT reduce production stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER 
-- On IF reduce production stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER 
-- On IDENT reduce production stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER 
-- On EOF reduce production stmt -> VAL IDENT COLON INT ASSIGN expr DELIMITER 

State 32:
stmt -> RETURN . expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 33

State 33:
expr -> expr . LBK expr RBK [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
stmt -> RETURN expr . DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On TIMES shift to state 11
-- On PLUS shift to state 16
-- On OR shift to state 20
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On DELIMITER shift to state 34
-- On CMP shift to state 24
-- On AND shift to state 26

State 34:
stmt -> RETURN expr DELIMITER . [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On VAL reduce production stmt -> RETURN expr DELIMITER 
-- On RETURN reduce production stmt -> RETURN expr DELIMITER 
-- On RBC reduce production stmt -> RETURN expr DELIMITER 
-- On PRINT reduce production stmt -> RETURN expr DELIMITER 
-- On IF reduce production stmt -> RETURN expr DELIMITER 
-- On IDENT reduce production stmt -> RETURN expr DELIMITER 
-- On EOF reduce production stmt -> RETURN expr DELIMITER 

State 35:
stmt -> PRINT . LPR expr RPR DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On LPR shift to state 36

State 36:
stmt -> PRINT LPR . expr RPR DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 37

State 37:
expr -> expr . LBK expr RBK [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . DIV expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . CMP expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . AND expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . OR expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
stmt -> PRINT LPR expr . RPR DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On TIMES shift to state 11
-- On RPR shift to state 38
-- On PLUS shift to state 16
-- On OR shift to state 20
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On CMP shift to state 24
-- On AND shift to state 26

State 38:
stmt -> PRINT LPR expr RPR . DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On DELIMITER shift to state 39

State 39:
stmt -> PRINT LPR expr RPR DELIMITER . [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On VAL reduce production stmt -> PRINT LPR expr RPR DELIMITER 
-- On RETURN reduce production stmt -> PRINT LPR expr RPR DELIMITER 
-- On RBC reduce production stmt -> PRINT LPR expr RPR DELIMITER 
-- On PRINT reduce production stmt -> PRINT LPR expr RPR DELIMITER 
-- On IF reduce production stmt -> PRINT LPR expr RPR DELIMITER 
-- On IDENT reduce production stmt -> PRINT LPR expr RPR DELIMITER 
-- On EOF reduce production stmt -> PRINT LPR expr RPR DELIMITER 

State 40:
stmt -> IF . LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On LPR shift to state 41

State 41:
stmt -> IF LPR . expr RPR LBC stmt RBC ELSE LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 42

State 42:
expr -> expr . LBK expr RBK [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . PLUS expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . MINUS expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . TIMES expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . DIV expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . CMP expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . AND expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
expr -> expr . OR expr [ TIMES RPR PLUS OR MINUS LBK DIV CMP AND ]
stmt -> IF LPR expr . RPR LBC stmt RBC ELSE LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On TIMES shift to state 11
-- On RPR shift to state 43
-- On PLUS shift to state 16
-- On OR shift to state 20
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On CMP shift to state 24
-- On AND shift to state 26

State 43:
stmt -> IF LPR expr RPR . LBC stmt RBC ELSE LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On LBC shift to state 44

State 44:
stmt -> IF LPR expr RPR LBC . stmt RBC ELSE LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On VAL shift to state 1
-- On RETURN shift to state 32
-- On PRINT shift to state 35
-- On IF shift to state 40
-- On IDENT shift to state 45
-- On stmt shift to state 50

State 45:
stmt -> IDENT . COLON ASSIGN expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On COLON shift to state 46

State 46:
stmt -> IDENT COLON . ASSIGN expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On ASSIGN shift to state 47

State 47:
stmt -> IDENT COLON ASSIGN . expr DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On NOT shift to state 6
-- On LPR shift to state 7
-- On IDENT shift to state 8
-- On CST shift to state 9
-- On expr shift to state 48

State 48:
expr -> expr . LBK expr RBK [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . DIV expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . CMP expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . AND expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
expr -> expr . OR expr [ TIMES PLUS OR MINUS LBK DIV DELIMITER CMP AND ]
stmt -> IDENT COLON ASSIGN expr . DELIMITER [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On TIMES shift to state 11
-- On PLUS shift to state 16
-- On OR shift to state 20
-- On MINUS shift to state 22
-- On LBK shift to state 13
-- On DIV shift to state 18
-- On DELIMITER shift to state 49
-- On CMP shift to state 24
-- On AND shift to state 26

State 49:
stmt -> IDENT COLON ASSIGN expr DELIMITER . [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On VAL reduce production stmt -> IDENT COLON ASSIGN expr DELIMITER 
-- On RETURN reduce production stmt -> IDENT COLON ASSIGN expr DELIMITER 
-- On RBC reduce production stmt -> IDENT COLON ASSIGN expr DELIMITER 
-- On PRINT reduce production stmt -> IDENT COLON ASSIGN expr DELIMITER 
-- On IF reduce production stmt -> IDENT COLON ASSIGN expr DELIMITER 
-- On IDENT reduce production stmt -> IDENT COLON ASSIGN expr DELIMITER 
-- On EOF reduce production stmt -> IDENT COLON ASSIGN expr DELIMITER 

State 50:
stmt -> IF LPR expr RPR LBC stmt . RBC ELSE LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On RBC shift to state 51

State 51:
stmt -> IF LPR expr RPR LBC stmt RBC . ELSE LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On ELSE shift to state 52

State 52:
stmt -> IF LPR expr RPR LBC stmt RBC ELSE . LBC stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On LBC shift to state 53

State 53:
stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC . stmt RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On VAL shift to state 1
-- On RETURN shift to state 32
-- On PRINT shift to state 35
-- On IF shift to state 40
-- On IDENT shift to state 45
-- On stmt shift to state 54

State 54:
stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt . RBC [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On RBC shift to state 55

State 55:
stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC . [ VAL RETURN RBC PRINT IF IDENT EOF ]
-- On VAL reduce production stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC 
-- On RETURN reduce production stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC 
-- On RBC reduce production stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC 
-- On PRINT reduce production stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC 
-- On IF reduce production stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC 
-- On IDENT reduce production stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC 
-- On EOF reduce production stmt -> IF LPR expr RPR LBC stmt RBC ELSE LBC stmt RBC 

State 56:
prog -> stmts . EOF [ # ]
stmts -> stmts . stmt [ VAL RETURN PRINT IF IDENT EOF ]
-- On VAL shift to state 1
-- On RETURN shift to state 32
-- On PRINT shift to state 35
-- On IF shift to state 40
-- On IDENT shift to state 45
-- On EOF shift to state 57
-- On stmt shift to state 58

State 57:
prog -> stmts EOF . [ # ]
-- On # reduce production prog -> stmts EOF 

State 58:
stmts -> stmts stmt . [ VAL RETURN PRINT IF IDENT EOF ]
-- On VAL reduce production stmts -> stmts stmt 
-- On RETURN reduce production stmts -> stmts stmt 
-- On PRINT reduce production stmts -> stmts stmt 
-- On IF reduce production stmts -> stmts stmt 
-- On IDENT reduce production stmts -> stmts stmt 
-- On EOF reduce production stmts -> stmts stmt 

State 59:
stmts -> stmt . [ VAL RETURN PRINT IF IDENT EOF ]
-- On VAL reduce production stmts -> stmt 
-- On RETURN reduce production stmts -> stmt 
-- On PRINT reduce production stmts -> stmt 
-- On IF reduce production stmts -> stmt 
-- On IDENT reduce production stmts -> stmt 
-- On EOF reduce production stmts -> stmt 

State 60:
prog' -> prog . [ # ]
-- On # accept prog

